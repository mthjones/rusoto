sudo: required
dist: trusty
# necessary for `travis-cargo coveralls --no-sudo`
addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - binutils-dev # optional: only required for the --verify flag of coveralls
language: rust
# cache dependencies: https://docs.travis-ci.com/user/caching/#Rust-Cargo-cache
cache: cargo
# run builds for all the trains (and more)
rust:
  # check that it compiles on the latest stable compiler
  - stable
  - beta
  - nightly
os:
  - linux
  - osx
cache:
  directories:
    - $HOME/.cargo
before_script:
  # load travis-cargo
  - |
      pip install 'travis-cargo<0.2' --user &&
      if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        export PATH=$HOME/.local/bin/:$PATH
      else
        export PATH=$HOME/Library/Python/2.7/bin:$PATH
      fi

# the main build
script:
  - echo "Running Rusoto tests" && travis_wait 40 travis-cargo test -- --all -vv
  - echo "Running Rusoto benchmarks" && travis_wait travis-cargo bench
  - |
      echo "Running cargo docs on stable Rust on Linux" &&
      if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        travis_wait travis-cargo --only stable doc -- --all --no-deps
      fi
after_success:
  # upload the documentation from the build with stable (automatically only
  # actually runs from the master branch, not individual PRs), not on OSX.
  - |
      if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        travis-cargo --only stable doc-upload
      fi
  # measure code coverage and upload to coveralls.io (the verify argument
  # mitigates kcov crashes due to malformed debuginfo, at the cost of some
  # speed. <https://github.com/huonw/travis-cargo/issues/12>)
  # Don't run on OSX.
  - |
      if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        travis-cargo coveralls --no-sudo --verify -- --lib
      fi
env:
  global:
    - RUST_BACKTRACE=1
    # encrypted Github token for doc upload
    - secure: rWVjaDybqYUL6pwb9JbKRAQJYJTTWkbIMsh92l1Y9vz+QJiF903HEaxea98Z7e1Qywizm60EoAu8CSj5e+TfOC9hb6ZwN9nQs4FPnywiAUXtiuxUXDpcjacXVXl8YcLG+mOnq/+thOo+J1l2+j7SLsBrP4ybHh4NS7rqj8Os/5fiIfHfwlSVPlbw1gtTmLv5SXyofWB9VHMgkDzzP9Bss5HwwXQyzyj1EF8AQNexSsWj/MPYhj3eQaBpIK49guCqe1JjWdKXoiu4XQFsWMV6LBf7OgrWHR9MNf1H6UHM97i8onTeDAviC3RaWQe8crb2cQwNXk/n/8kde0F/1oBaljbOHTbLScflQNRGxV2jpbiIMVLgxdXUWK8d2JveVrXM5TKx6Wp8IolJ8Cr8egzLn9dRn1OG5pwt7b/Cr6DRaXFH5TRSz0Uln0GMA08NWC2sbDz1xtlkiUkRpHmBPmAGNjjDPaJs+OLPyPFMw5Gqr8g/zzCbGI92t210oMsVoCci5S8MO74HExYhsyAz4/CI0fqSSXDKG1xveguktmKWSxH5idyAmfDg556nSmuP+5w69QM9Vcg8j0szuSzsVoc/YsHMsdbZPdANLagbU9K59M1OpMkL3RSAav/cyL41+pSI3zybHKGim+kHZSwBWlLVKCX7P2FmineEFriLK8UJFxo=

branches:
  only:
    - master
    - auto
notifications:
  email: false
matrix:
  fast_finish: true
  allow_failures:
    - rust: nightly
